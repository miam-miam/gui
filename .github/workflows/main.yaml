name: Test CI

on:
  push:
  pull_request:

env:
  RUST_BACKTRACE: short
  CARGO_TERM_COLOR: always

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config clang libwayland-dev libxkbcommon-x11-dev libvulkan-dev

      - name: Lint fmt
        run: cargo fmt --all -- --check

      - name: Lint clippy
        if: always()
        run: cargo clippy --all -- -D warnings

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config clang libwayland-dev libxkbcommon-x11-dev libvulkan-dev mold

      - name: install llvmpipe and lavapipe (sofware based renderers)
        shell: bash
        run: |
          set -e

          sudo apt-get update -y -qq

          # vulkan sdk
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list

          sudo add-apt-repository ppa:kisak/kisak-mesa

          sudo apt-get update
          sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev vulkan-sdk mesa-vulkan-drivers


      - name: Use mold as linker
        run: printf '[target.x86_64-unknown-linux-gnu]\nlinker = "clang"\nrustflags = ["-C", "link-arg=-fuse-ld=/usr/bin/mold"]' > ~/.cargo/config.toml

      - name: Test
        run: cargo test --all

      - name: Archive screenshots artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linux-screenshots
          path: examples/*/screenshots/**
